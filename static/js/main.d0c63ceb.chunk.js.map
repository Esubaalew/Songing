{"version":3,"sources":["actions/types.js","apis/songs.js","apis/apis.js","history.js","sagas.js","actions/index.js","components/songs/SongList.component.js","components/songs/SongForm.component.js","components/songs/SongCreate.component.js","components/songs/SongEdit.component.js","components/Modal.component.js","components/songs/SongDelete.component.js","components/songs/SongShow.component.js","components/Header.component.js","components/NotFound.component.js","components/App.component.js","reducers/songsReducer.js","reducers/index.js","index.js"],"names":["FETCH_SONGS","CREATE_SONG","FETCH_SONG","EDIT_SONG","DELETE_SONG","RECEIVE_SONGS","NEW_SONG","RECEIVE_SONG","UPDATE_SONG","REQUEST_DELETE","axios","create","baseURL","api","fetchSongs","songs","get","fetchSong","id","createSong","data","post","editSong","patch","deleteSong","delete","createBrowserHistory","getSongs","addSong","getSong","updateSong","removeSong","mySaga","call","apis","response","put","type","payload","console","log","action","history","push","formValues","takeLatest","connect","state","Object","values","useEffect","Fragment","className","to","map","song","key","renderAdmin","title","description","reduxForm","form","validate","errors","handleSubmit","onSubmit","renderInput","input","label","meta","touched","error","autoComplete","renderError","Field","name","component","songCreate","ownProps","match","params","initialValues","Modal","props","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","renderActions","songContainer","css","Header","notFound","notFoundDescription","goHomeButton","divContainer","inputField","searchButton","image","NotFound","placeholder","src","alt","containerStyle","App","path","exact","SongList","SongCreate","SongEdit","SongDelete","SongShow","combineReducers","formReducer","_","mapKeys","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","render"],"mappings":"0OAAaA,EAAc,cACdC,EAAc,cACdC,EAAa,aACbC,EAAY,YACZC,EAAc,cAGdC,EAAgB,gBAChBC,EAAW,WACXC,EAAe,eACfC,EAAc,cACdC,EAAiB,iB,SCTfC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,0BCOEC,EARH,CACRC,WAAY,kBAAMC,EAAMC,IAAI,WAC5BC,UAAW,SAACC,GAAD,OAAQH,EAAMC,IAAN,iBAAoBE,KACvCC,WAAY,SAACC,GAAD,OAAUL,EAAMM,KAAK,SAAUD,IAC3CE,SAAU,SAACJ,EAAIE,GAAL,OAAcL,EAAMQ,MAAN,iBAAsBL,GAAME,IACpDI,WAAY,SAACN,GAAD,OAAQH,EAAMU,OAAN,iBAAuBP,M,QCNhCQ,gB,WCgBLC,G,WASAC,G,WAWAC,G,WASAC,G,WAYAC,G,WAWeC,GApDzB,SAAUL,IAAV,sEAEyB,OAFzB,kBAE+BM,YAAKC,EAAKpB,YAFzC,OAGQ,OADMqB,EAFd,gBAGcC,YAAI,CAAEC,KAAMhC,EAAeiC,QAASH,EAASf,OAH3D,uDAKQmB,QAAQC,IAAR,MALR,oDASA,SAAUZ,EAAQa,GAAlB,sEAEyB,OAFzB,kBAE+BR,YAAKC,EAAKf,WAAYsB,EAAOH,SAF5D,OAGQ,OADMH,EAFd,gBAGcC,YAAI,CAAEC,KAAMpC,EAAaqC,QAASH,EAASf,OAHzD,OAIQsB,EAAQC,KAAK,KAJrB,gDAOQJ,QAAQC,IAAR,MAPR,oDAWA,SAAUX,EAAQY,GAAlB,sEAEyB,OAFzB,kBAE+BR,YAAKC,EAAKjB,UAAWwB,EAAOH,SAF3D,OAGQ,OADMH,EAFd,gBAGcC,YAAI,CAAEC,KAAM9B,EAAc+B,QAASH,EAASf,OAH1D,uDAKQmB,QAAQC,IAAR,MALR,oDASA,SAAUV,EAAWW,GAArB,4EAGyB,OAHzB,EAC+BA,EAAOH,QAA1BpB,EADZ,EACYA,GAAI0B,EADhB,EACgBA,WADhB,kBAG+BX,YAAKC,EAAKZ,SAAUJ,EAAI0B,GAHvD,OAIQ,OADMT,EAHd,gBAIcC,YAAI,CAAEC,KAAM7B,EAAa8B,QAASH,EAASf,OAJzD,OAKQsB,EAAQC,KAAK,KALrB,kDAQQJ,QAAQC,IAAR,MARR,qDAYA,SAAUT,EAAWU,GAArB,gEAEQ,OAFR,kBAEcR,YAAKC,EAAKV,WAAYiB,EAAOH,SAF3C,OAGQ,OAHR,SAGcF,YAAI,CAAEC,KAAMjC,EAAakC,QAASG,EAAOH,UAHvD,OAIQI,EAAQC,KAAK,KAJrB,gDAMQJ,QAAQC,IAAR,MANR,oDAWe,SAAUR,IAAV,gEACX,OADW,SACLa,YAAW7C,EAAa2B,GADnB,OAEX,OAFW,SAELkB,YAAWvC,EAAUsB,GAFhB,OAGX,OAHW,SAGLiB,YAAW3C,EAAY2B,GAHlB,OAIX,OAJW,SAILgB,YAAW1C,EAAW2B,GAJjB,OAKX,OALW,UAKLe,YAAWpC,EAAgBsB,GALtB,uC,4BClDFd,EAAY,SAAAC,GAAE,MAAK,CAAEmB,KAAMnC,EAAYoC,QAASpB,ICyC9C4B,cAJS,SAAAC,GACpB,MAAO,CAAEhC,MAAOiC,OAAOC,OAAOF,EAAMhC,SAGA,CAAED,WD/ChB,iBAAO,CAAEuB,KAAMrC,KC+C1B8C,CAvDE,SAAC,GAA2B,IAAzBhC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MAC5BmC,oBAAU,WACNpC,KACD,CAACA,IAkCJ,OACI,kBAAC,IAAMqC,SAAP,KACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,uBAAsB,SAV5C,6BACI,kBAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,0CAAyC,kBAc7E,yBAAKA,UAAU,kBA/BZrC,EAAMuC,IAAI,SAAAC,GACb,OACI,yBAAKH,UAAU,OAAOI,IAAKD,EAAKrC,IAZxB,SAACqC,GACjB,OACI,yBAAKH,UAAU,yBACX,kBAAC,IAAD,CAAMC,GAAE,sBAAiBE,EAAKrC,IAAMkC,UAAU,qBAAoB,QAClE,kBAAC,IAAD,CAAMC,GAAE,wBAAmBE,EAAKrC,IAAMkC,UAAU,sBAAqB,WAShEK,CAAYF,GACb,uBAAGH,UAAU,oCACb,yBAAKA,UAAU,WACX,kBAAC,IAAD,CAAMA,UAAU,SAASC,GAAE,iBAAYE,EAAKrC,KAAOqC,EAAKG,OACxD,yBAAKN,UAAU,eAAeG,EAAKI,qB,kBC8B5CC,cAAU,CACrBC,KAAM,WACNC,SAda,SAAAlB,GACb,IAAMmB,EAAS,GAQf,OAPKnB,EAAWc,QACZK,EAAOL,MAAQ,0BAEdd,EAAWe,cACZI,EAAOJ,YAAc,gCAGlBI,IAGIH,CAtDE,SAAC,GAAgC,IAA9BI,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAWxBC,EAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACjC,OACI,yBAAKjB,UAAS,gBAAWiB,EAAKC,SAAWD,EAAKE,MAAQ,QAAU,KAC5D,+BAAQH,GACR,2CAAWD,EAAX,CAAkBK,aAAa,SAC/B,6BAfQ,SAAC,GAAwB,IAAtBD,EAAqB,EAArBA,MACnB,GADwC,EAAdD,SACXC,EACX,OACI,yBAAKnB,UAAU,oBACX,yBAAKA,UAAU,UAAUmB,IAWvBE,CAAYJ,MAS9B,OACI,0BAAMJ,SAAUD,EALK,SAACpB,GACtBqB,EAASrB,KAIuCQ,UAAU,iBACtD,kBAACsB,EAAA,EAAD,CACIC,KAAK,QACLC,UAAWV,EACXE,MAAM,gBAEV,kBAACM,EAAA,EAAD,CACIC,KAAK,cACLC,UAAWV,EACXE,MAAM,sBAEV,4BAAQhB,UAAU,qBAAoB,aCrBnCN,cAAQ,KAAM,CAAE+B,WHHL,SAAAjC,GAAU,MAAK,CAAEP,KAAM/B,EAAUgC,QAASM,KGGrDE,CAbI,SAAC,GAAoB,IAAlB+B,EAAiB,EAAjBA,WAKlB,OACI,6BACI,4BAAI,iBACJ,kBAAC,EAAD,CAAUZ,SAPD,SAACrB,GACdiC,EAAWjC,SCyBJE,cAJS,SAACC,EAAO+B,GAC5B,MAAO,CAAEvB,KAAMR,EAAMhC,MAAM+D,EAASC,MAAMC,OAAO9D,MAGb,CAAED,YAAWK,SJX7B,SAACJ,EAAI0B,GAAL,MAAqB,CAAEP,KAAMlC,EAAWmC,QAAS,CAAEpB,KAAI0B,iBIWhEE,CA5BE,SAAC,GAA0C,IAAxC7B,EAAuC,EAAvCA,UAAWK,EAA4B,EAA5BA,SAAUyD,EAAkB,EAAlBA,MAAOxB,EAAW,EAAXA,KAC5CL,oBAAU,WACNjC,EAAU8D,EAAMC,OAAO9D,KACxB,CAACD,EAAW8D,EAAMC,OAAO9D,KAM5B,OAAKqC,EAKD,6BACI,4BAAI,eACJ,kBAAC,EAAD,CACI0B,cAAe,CAAEvB,MAAOH,EAAKG,MAAOC,YAAaJ,EAAKI,aACtDM,SAbK,SAACrB,GACdtB,EAASyD,EAAMC,OAAO9D,GAAI0B,OAInB,6BAAK,gBCILsC,EAhBD,SAAAC,GACZ,OAAOC,IAASC,aACd,yBACEC,QAASH,EAAMI,UACfnC,UAAU,mCAEV,yBAAKkC,QAAS,SAACE,GAAD,OAAOA,EAAEC,mBAAmBrC,UAAU,oCAClD,yBAAKA,UAAU,UAAU+B,EAAMzB,OAC/B,yBAAKN,UAAU,WAAW+B,EAAMO,SAChC,yBAAKtC,UAAU,WAAW+B,EAAMQ,WAGpCC,SAASC,cAAc,YCkCZ/C,cAJS,SAACC,EAAO+B,GAC5B,MAAO,CAAEvB,KAAMR,EAAMhC,MAAM+D,EAASC,MAAMC,OAAO9D,MAGb,CAAED,YAAWO,WNxB3B,SAAAN,GAAE,MAAK,CAAEmB,KAAM5B,EAAgB6B,QAASpB,KMwBnD4B,CA1CI,SAAC,GAA4C,IAA1C7B,EAAyC,EAAzCA,UAAWO,EAA8B,EAA9BA,WAAYuD,EAAkB,EAAlBA,MAAOxB,EAAW,EAAXA,KAChDL,oBAAU,WACNjC,EAAU8D,EAAMC,OAAO9D,KACxB,CAACD,EAAW8D,EAAMC,OAAO9D,KAyB5B,OACI,kBAAC,EAAD,CACIwC,MAAM,cACNgC,QAVCnC,EAIC,wDAAN,OAA+DA,EAAKG,OAHzD,6CAUPiC,QA3Bc,WAAO,IACjBzE,EAAO6D,EAAMC,OAAb9D,GACR,OACI,kBAAC,IAAMiC,SAAP,KACI,4BACImC,QAAS,kBAAM9D,EAAWN,IAC1BkC,UAAU,sBACb,UAGD,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,aAAY,WAiB9B0C,GACTP,UAAW,kBAAM7C,EAAQC,KAAK,UCb3BG,cAJS,SAACC,EAAO+B,GAC5B,MAAO,CAAEvB,KAAMR,EAAMhC,MAAM+D,EAASC,MAAMC,OAAO9D,MAGb,CAAED,aAA3B6B,CAvBE,SAAC,GAAgC,IAA9B7B,EAA6B,EAA7BA,UAAW8D,EAAkB,EAAlBA,MAAOxB,EAAW,EAAXA,KAKlC,GAJAL,oBAAU,WACNjC,EAAU8D,EAAMC,OAAO9D,KACxB,CAACD,EAAW8D,EAAMC,OAAO9D,MAEvBqC,EACD,OAAO,6BAAK,cAN6B,IASrCG,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,YAEf,OACI,6BACI,4BAAKD,GACL,4BAAKC,M,ucCfjB,IAAMoC,GAAgBC,YAAH,MAObjF,GAAQiF,YAAH,MAkBIC,GARA,WACX,OACI,mBAAKD,IAAKD,IACN,YAAC,IAAD,CAAM1C,GAAG,IAAI2C,IAAKjF,IAAO,c,2lCClBrC,IAAMmF,GAAWF,YAAH,MAMRG,GAAsBH,YAAH,MAMnBI,GAAeJ,YAAH,MAQZK,GAAeL,YAAH,MAKZM,GAAaN,YAAH,MAKVO,GAAeP,YAAH,MAOZQ,GAAQR,YAAH,MAuBIS,GAfE,WACb,OACI,YAAC,IAAMtD,SAAP,KACI,kBAAI6C,IAAKE,IAAU,wBACnB,kBAAIF,IAAKG,IAAqB,+HAC9B,mBAAKH,IAAKK,IACN,sBAAQL,IAAKI,IAAc,WAC3B,qBAAO/D,KAAK,OAAOqE,YAAY,YAAYV,IAAKM,KAChD,sBAAQN,IAAKO,IAAc,WAE/B,mBAAKI,IAAI,2EAA2EC,IAAI,YAAYZ,IAAKQ,O,wMC7CrH,IAAMK,GAAiBb,YAAH,MA2BLc,GApBH,WACR,OACI,mBAAKd,IAAKa,IACN,YAAC,IAAD,CAAQnE,QAASA,GACb,uBACI,YAAC,GAAD,MACA,YAAC,IAAD,KACI,YAAC,IAAD,CAAOqE,KAAK,IAAIC,OAAK,EAACpC,UAAWqC,IACjC,YAAC,IAAD,CAAOF,KAAK,aAAaC,OAAK,EAACpC,UAAWsC,IAC1C,YAAC,IAAD,CAAOH,KAAK,kBAAkBC,OAAK,EAACpC,UAAWuC,IAC/C,YAAC,IAAD,CAAOJ,KAAK,oBAAoBC,OAAK,EAACpC,UAAWwC,IACjD,YAAC,IAAD,CAAOL,KAAK,aAAaC,OAAK,EAACpC,UAAWyC,IAC1C,YAAC,IAAD,CAAON,KAAK,KAAKC,OAAK,EAACpC,UAAW6B,U,+lBCzB3C,ICJAa,eAAgB,CAC3BzD,KAAM0D,KACNxG,MDEW,WAAyB,IAAxBgC,EAAuB,uDAAf,GAAIN,EAAW,uCAEnC,OAAQA,EAAOJ,MACX,KAAKhC,EACD,OAAO,GAAP,GAAY0C,EAAZ,GAAsByE,KAAEC,QAAQhF,EAAOH,QAAS,OACpD,KAAKrC,EAEL,KAAKM,EAEL,KAAKC,EACD,OAAO,GAAP,GAAYuC,EAAZ,gBAAoBN,EAAOH,QAAQpB,GAAKuB,EAAOH,UACnD,KAAKlC,EACD,OAAOoH,KAAEE,KAAK3E,EAAON,EAAOH,SAChC,QACI,OAAOS,MEXb4E,GAAmBC,OAAOC,sCAAwCC,IAElEC,GAAiBC,cAEjBC,GAAQC,YAAYC,GAAUR,GAAiBS,YAAgBL,MAErEA,GAAeM,IAAIrG,GAEnBoD,IAASkD,OACL,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,GAAD,OAEJrC,SAASC,cAAc,Y","file":"static/js/main.d0c63ceb.chunk.js","sourcesContent":["export const FETCH_SONGS = 'FETCH_SONGS';\r\nexport const CREATE_SONG = 'CREATE_SONG';\r\nexport const FETCH_SONG = 'FETCH_SONG';\r\nexport const EDIT_SONG = 'EDIT_SONG';\r\nexport const DELETE_SONG = 'DELETE_SONG';\r\n\r\n\r\nexport const RECEIVE_SONGS = 'RECEIVE_SONGS';\r\nexport const NEW_SONG = 'NEW_SONG';\r\nexport const RECEIVE_SONG = 'RECEIVE_SONG';\r\nexport const UPDATE_SONG = 'UPDATE_SONG';\r\nexport const REQUEST_DELETE = 'REQUEST_DELETE';","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:3001'\r\n})","import songs from './songs';\r\n\r\nconst api = {\r\n    fetchSongs: () => songs.get('/songs'),\r\n    fetchSong: (id) => songs.get(`/songs/${id}`),\r\n    createSong: (data) => songs.post('/songs', data),\r\n    editSong: (id, data) => songs.patch(`/songs/${id}`, data),\r\n    deleteSong: (id) => songs.delete(`/songs/${id}`)\r\n};\r\n\r\nexport default api;\r\n","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();","import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    FETCH_SONGS,\r\n    RECEIVE_SONGS,\r\n    NEW_SONG,\r\n    CREATE_SONG,\r\n    FETCH_SONG,\r\n    RECEIVE_SONG,\r\n    EDIT_SONG,\r\n    UPDATE_SONG,\r\n    REQUEST_DELETE,\r\n    DELETE_SONG,\r\n} from './actions/types';\r\nimport apis from './apis/apis';\r\nimport history from './history';\r\n\r\n\r\nfunction* getSongs() {\r\n    try {\r\n        const response = yield call(apis.fetchSongs);\r\n        yield put({ type: RECEIVE_SONGS, payload: response.data });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* addSong(action) {\r\n    try {\r\n        const response = yield call(apis.createSong, action.payload);\r\n        yield put({ type: CREATE_SONG, payload: response.data });\r\n        history.push('/');\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* getSong(action) {\r\n    try {\r\n        const response = yield call(apis.fetchSong, action.payload);\r\n        yield put({ type: RECEIVE_SONG, payload: response.data });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* updateSong(action) {\r\n    const { id, formValues } = action.payload;\r\n    try {\r\n        const response = yield call(apis.editSong, id, formValues);\r\n        yield put({ type: UPDATE_SONG, payload: response.data });\r\n        history.push('/');\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* removeSong(action) {\r\n    try {\r\n        yield call(apis.deleteSong, action.payload);\r\n        yield put({ type: DELETE_SONG, payload: action.payload });\r\n        history.push('/');\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n// Get the response of the latest request(s) \r\nexport default function* mySaga() {\r\n    yield takeLatest(FETCH_SONGS, getSongs);\r\n    yield takeLatest(NEW_SONG, addSong);\r\n    yield takeLatest(FETCH_SONG, getSong);\r\n    yield takeLatest(EDIT_SONG, updateSong);\r\n    yield takeLatest(REQUEST_DELETE, removeSong);\r\n}","import {\r\n    FETCH_SONGS,\r\n    RECEIVE_SONGS,\r\n    CREATE_SONG,\r\n    NEW_SONG,\r\n    FETCH_SONG,\r\n    RECEIVE_SONG,\r\n    EDIT_SONG,\r\n    UPDATE_SONG,\r\n    REQUEST_DELETE,\r\n    DELETE_SONG\r\n} from './types';\r\n\r\nexport const fetchSongs = () => ({ type: FETCH_SONGS });\r\nexport const receiveSongs = payload => ({ type: RECEIVE_SONGS, payload });\r\n\r\nexport const songCreate = formValues => ({ type: NEW_SONG, payload: formValues });\r\nexport const receiveNew = payload => ({ type: CREATE_SONG, payload });\r\n\r\nexport const fetchSong = id => ({ type: FETCH_SONG, payload: id });\r\nexport const receiveSong = payload => ({ type: RECEIVE_SONG, payload });\r\n\r\nexport const editSong = (id, formValues) => ({ type: EDIT_SONG, payload: { id, formValues } });\r\nexport const receiveEdit = payload => ({ type: UPDATE_SONG, payload });\r\n\r\nexport const deleteSong = id => ({ type: REQUEST_DELETE, payload: id });\r\nexport const receiveDelete = payload => ({ type: DELETE_SONG, payload });\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchSongs } from '../../actions/index';\r\n\r\nconst SongList = ({ fetchSongs, songs }) => {\r\n    useEffect(() => {\r\n        fetchSongs();\r\n    }, [fetchSongs]);\r\n\r\n    const renderAdmin = (song) => {\r\n        return (\r\n            <div className=\"right floated content\">\r\n                <Link to={`/songs/edit/${song.id}`} className=\"ui button primary\">Edit</Link>\r\n                <Link to={`/songs/delete/${song.id}`} className=\"ui button negative\">Delete</Link>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderList = () => {\r\n        return songs.map(song => {\r\n            return (\r\n                <div className=\"item\" key={song.id}>\r\n                    {renderAdmin(song)}\r\n                    <i className=\"large middle aligned icon music\" />\r\n                    <div className=\"content\">\r\n                        <Link className=\"header\" to={`/songs/${song.id}`}>{song.title}</Link>\r\n                        <div className=\"description\">{song.description}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    const renderCreate = () => {\r\n        return (\r\n            <div>\r\n                <Link to=\"/songs/new\" className=\"ui button primary right floated column\">Create Song</Link>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"ui grid\">\r\n                <div className=\"four column row\">\r\n                    <h2 className=\"left floated column\">Songs</h2>\r\n                    {renderCreate()}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"ui celled list\">{renderList()}</div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { songs: Object.values(state.songs) };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchSongs })(SongList);\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nconst SongForm = ({ handleSubmit, onSubmit }) => {\r\n    const renderError = ({ error, touched }) => {\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    const renderInput = ({ input, label, meta }) => {\r\n        return (\r\n            <div className={`field ${meta.touched && meta.error ? 'error' : ''}`}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\" />\r\n                <div>{renderError(meta)}</div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const handleFormSubmit = (formValues) => {\r\n        onSubmit(formValues);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(handleFormSubmit)} className=\"ui form error\">\r\n            <Field\r\n                name=\"title\"\r\n                component={renderInput}\r\n                label=\"Enter title\"\r\n            />\r\n            <Field\r\n                name=\"description\"\r\n                component={renderInput}\r\n                label=\"Enter description\"\r\n            />\r\n            <button className=\"ui button primary\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst validate = formValues => {\r\n    const errors = {};\r\n    if (!formValues.title) {\r\n        errors.title = \"You must enter a title\";\r\n    }\r\n    if (!formValues.description) {\r\n        errors.description = \"You must enter a description\";\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n    form: \"songForm\",\r\n    validate\r\n})(SongForm);\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { songCreate } from '../../actions/index';\r\n\r\nimport SongForm from './SongForm.component';\r\n\r\nconst SongCreate = ({ songCreate }) => {\r\n    const onSubmit = (formValues) => {\r\n        songCreate(formValues);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Create a song</h3>\r\n            <SongForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, { songCreate })(SongCreate);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchSong, editSong } from '../../actions/index';\r\nimport SongForm from './SongForm.component';\r\n\r\nconst SongEdit = ({ fetchSong, editSong, match, song }) => {\r\n    useEffect(() => {\r\n        fetchSong(match.params.id);\r\n    }, [fetchSong, match.params.id]);\r\n\r\n    const onSubmit = (formValues) => {\r\n        editSong(match.params.id, formValues);\r\n    }\r\n\r\n    if (!song) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Edit a song</h3>\r\n            <SongForm\r\n                initialValues={{ title: song.title, description: song.description }}\r\n                onSubmit={onSubmit}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { song: state.songs[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchSong, editSong })(SongEdit);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Modal = props => {\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      onClick={props.onDismiss}\r\n      className=\"ui dimmer modals visible active\"\r\n    >\r\n      <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n        <div className=\"header\">{props.title}</div>\r\n        <div className=\"content\">{props.content}</div>\r\n        <div className=\"actions\">{props.actions}</div>\r\n      </div>\r\n    </div>,\r\n    document.querySelector('#modal')\r\n  )\r\n}\r\n\r\nexport default Modal;","import React, { useEffect } from 'react';\r\nimport Modal from '../Modal.component';\r\nimport history from '../../history';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { fetchSong, deleteSong } from '../../actions/index';\r\n\r\nconst SongDelete = ({ fetchSong, deleteSong, match, song }) => {\r\n    useEffect(() => {\r\n        fetchSong(match.params.id);\r\n    }, [fetchSong, match.params.id]);\r\n\r\n    const renderActions = () => {\r\n        const { id } = match.params;\r\n        return (\r\n            <React.Fragment>\r\n                <button\r\n                    onClick={() => deleteSong(id)}\r\n                    className=\"ui negative button\"\r\n                >\r\n                    Delete\r\n                </button>\r\n                <Link to=\"/\" className=\"ui button\">Cancel</Link>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const renderContent = () => {\r\n        if (!song) {\r\n            return \"Are you sure you want to delete this song?\"\r\n        }\r\n\r\n        return `Are you sure you want to delete the song with title: ${song.title}`\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Delete Song\"\r\n            content={renderContent()}\r\n            actions={renderActions()}\r\n            onDismiss={() => history.push('/')}\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { song: state.songs[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchSong, deleteSong })(SongDelete);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSong } from '../../actions/index';\r\n\r\nconst SongShow = ({ fetchSong, match, song }) => {\r\n    useEffect(() => {\r\n        fetchSong(match.params.id);\r\n    }, [fetchSong, match.params.id]);\r\n\r\n    if (!song) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const { title, description } = song;\r\n\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            <h5>{description}</h5>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { song: state.songs[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchSong })(SongShow);\r\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/react';\r\nimport { Link } from 'react-router-dom';\r\nconst songContainer = css`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\npadding: 0.25rem;\r\nborder-bottom: 1px solid #ddd;\r\n`\r\nconst songs = css`\r\ncolor: #ddd;\r\ntext-decoration: none;\r\npadding: 0.5rem 1rem;\r\nfont-size: 2rem;\r\nfont-family: 'Pacifico', cursive;\r\nfont-weight: bold;\r\nletter-spacing: 0.1rem;\r\ntext-transform: uppercase;\r\n`\r\nconst Header = () => {\r\n    return (\r\n        <div css={songContainer}>\r\n            <Link to=\"/\" css={songs}>HomePage</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","\r\n/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst notFound = css`\r\ntext-align: center;\r\nfont-size: 3rem;\r\ncolor: darkblue;\r\nfont-family: 'Lato', sans-serif;\r\n`\r\nconst notFoundDescription = css`\r\ntext-align: center;\r\nfont-style: italic;\r\ncolor: gray;\r\nfont-family: 'Lato', sans-serif;\r\n`\r\nconst goHomeButton = css`\r\nmargin-right: 10px;\r\nbackground-color: darkblue;\r\ncolor: white;\r\nborder: none;\r\npadding: 10px 20px;\r\ncursor: pointer;\r\n`\r\nconst divContainer = css`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`\r\nconst inputField = css`\r\nmargin-right: 10px;\r\nborder: 1px solid darkblue;\r\npadding: 10px 20px;\r\n`\r\nconst searchButton = css`\r\nbackground-color: darkblue;\r\ncolor: white;\r\nborder: none;\r\npadding: 10px 20px;\r\ncursor: pointer;\r\n`\r\nconst image = css`\r\ndisplay: block;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\nwidth: 50%;\r\n`\r\n\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <h1 css={notFound}>Oops! Page not found</h1>\r\n            <h3 css={notFoundDescription}>We're sorry, the page you requested could not be found. Please go back to the homepage or try searching for something else.</h3>\r\n            <div css={divContainer}>\r\n                <button css={goHomeButton}>Go Home</button>\r\n                <input type=\"text\" placeholder=\"Search...\" css={inputField} />\r\n                <button css={searchButton}>Search</button>\r\n            </div>\r\n            <img src=\"https://cdn.dribbble.com/users/285475/screenshots/2083086/dribbble_1.gif\" alt=\"404 image\" css={image} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NotFound;\r\n","\r\n/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport SongList from './songs/SongList.component';\r\nimport SongCreate from './songs/SongCreate.component';\r\nimport SongEdit from './songs/SongEdit.component';\r\nimport SongDelete from './songs/SongDelete.component';\r\nimport SongShow from './songs/SongShow.component';\r\nimport Header from './Header.component';\r\nimport NotFound from './NotFound.component';\r\nimport { css, jsx } from '@emotion/react';\r\n\r\nimport history from '../history';\r\n\r\nconst containerStyle = css`\r\n  margin: 0 auto;\r\n  max-width: 960px;\r\n  padding: 40px;\r\n  border: 1px solid white;\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.3);\r\n`;\r\nconst App = () => {\r\n    return (\r\n        <div css={containerStyle} >\r\n            <Router history={history}>\r\n                <div>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={SongList} />\r\n                        <Route path=\"/songs/new\" exact component={SongCreate} />\r\n                        <Route path=\"/songs/edit/:id\" exact component={SongEdit} />\r\n                        <Route path=\"/songs/delete/:id\" exact component={SongDelete} />\r\n                        <Route path=\"/songs/:id\" exact component={SongShow} />\r\n                        <Route path=\"**\" exact component={NotFound} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default App;","import _ from 'lodash';\r\nimport {\r\n    RECEIVE_SONGS,\r\n    CREATE_SONG,\r\n    RECEIVE_SONG,\r\n    UPDATE_SONG,\r\n    DELETE_SONG\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case RECEIVE_SONGS:\r\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\r\n        case CREATE_SONG:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case RECEIVE_SONG:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case UPDATE_SONG:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case DELETE_SONG:\r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport songsReducer from './songsReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    songs: songsReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n// import reduxThunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport mySaga from './sagas';\r\n\r\n\r\nimport App from './components/App.component';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n// Run the saga\r\nsagaMiddleware.run(mySaga);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}